{"filter":false,"title":"images_controller.rb","tooltip":"/app/controllers/images_controller.rb","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":1,"column":67},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":2,"column":2},"end":{"row":2,"column":35},"action":"insert","lines":["before_action :authenticate_user!"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"remove","lines":["class ImagesController < ApplicationController","  before_action :set_image, only: [:show, :edit, :update, :destroy]","  before_action :authenticate_user!","","  # GET /images","  # GET /images.json","  def index","    @images = Image.all","  end","","  # GET /images/1","  # GET /images/1.json","  def show","  end","","  # GET /images/new","  def new","    @image = Image.new","  end","","  # GET /images/1/edit","  def edit","  end","","  # POST /images","  # POST /images.json","  def create","    @image = Image.new(image_params)","","    respond_to do |format|","      if @image.save","        format.html { redirect_to @image, notice: 'Image was successfully created.' }","        format.json { render :show, status: :created, location: @image }","      else","        format.html { render :new }","        format.json { render json: @image.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /images/1","  # PATCH/PUT /images/1.json","  def update","    respond_to do |format|","      if @image.update(image_params)","        format.html { redirect_to @image, notice: 'Image was successfully updated.' }","        format.json { render :show, status: :ok, location: @image }","      else","        format.html { render :edit }","        format.json { render json: @image.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /images/1","  # DELETE /images/1.json","  def destroy","    @image.destroy","    respond_to do |format|","      format.html { redirect_to images_url, notice: 'Image was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_image","      @image = Image.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def image_params","      params.require(:image).permit(:user_id, :title, :string, :file, :string, :created_at, :datetime)","    end","end",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["class ImagesController < ApplicationController","  before_action :set_image, only: [:show, :edit, :update, :destroy]","  before_action :authenticate_user!","  # GET /images","  # GET /images.json","  def index","    @images = Image.all","  end","","  # GET /images/1","  # GET /images/1.json","  def show","  end","","  # GET /images/new","  def new","    @image = Image.new","  end","","  # GET /images/1/edit","  def edit","  end","","  # POST /images","  # POST /images.json","  def create","    @image = Image.new(image_params)","    @image.user_id = current_user.id","    respond_to do |format|","      if @image.save","        flash[:success] = \"uploader success\"","        format.html { redirect_to @image, notice: 'Image was successfully created.' }","        format.json { render :show, status: :created, location: @image }","      else","        flash[:Danger] = \"uploader errors\"","        format.html { render :new }","        format.json { render json: @image.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /images/1","  # PATCH/PUT /images/1.json","  def update","    respond_to do |format|","      if @image.update(image_params)","        flash[:success] = \"update success\"","        format.html { redirect_to @image, notice: 'Image was successfully updated.' }","        format.json { render :show, status: :ok, location: @image }","      else","        flash[:Danger] = \"update errors\"","        format.html { render :edit }","        format.json { render json: @image.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /images/1","  # DELETE /images/1.json","  def destroy","    @image.destroy","    respond_to do |format|","      flash[:success] = \"uploader success\"","      format.html { redirect_to images_url, notice: 'Image was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_image","      @image = Image.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def image_params","      params.require(:image).permit(:user_id, :title, :file, :created_at)","    end","end",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":79,"column":0},"end":{"row":79,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":27,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1459938993264,"hash":"265666d8c955c56eb1dfe34a455694a10d0a0ca0"}